% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny_helpers.R
\name{debug_shiny}
\alias{debug_shiny}
\title{Function to debug shiny script interactively (Needs RStudio)}
\usage{
debug_shiny(expr, monitor_dirs, env = parent.frame(), action = NULL,
  action_env = env, force_eval = FALSE)
}
\arguments{
\item{expr}{an expression ends with shinyApp}

\item{monitor_dirs}{directory to monitor. Usually scripts used by your shiny apps}

\item{env}{environment to evaluate \code{expr}, with side effect}

\item{action}{NULL, or expression to evaluate once \code{monitor_dirs} is changed}

\item{action_env}{environment to evaluate \code{action}, with side effect}

\item{force_eval}{force evaluation}
}
\description{
Function to debug shiny script interactively (Needs RStudio)
}
\examples{
\dontrun{
# Create a shinyapp that monitors your desktop
# if there is any change to your desktop, the app
# will re-launch

library(shiny)
debug_shiny({
  # Launch shiny app
  shinyApp(
    ui = fluidPage(textInput('hey', 'Hey, add a file to your desktop!',
                             value = as.character(Sys.time()))),
    server = function(...){})
}, action = {
  cat2('One or more files are changed, restarting')
}, monitor_dirs = '~/Desktop/')
}
}
